#
# Car-Routing is experimantal and expect local failures, as turn restrictions are missing, leading to possible wrong routes
# Based on standard Car-test, added speed and eco preferences to roads.
# See the bottom for version history
# Version 1.0.3

---context:global

assign drivestyle 3			# must have integer values 0=short,1=eco,2=ecofast(preferred to eco),3=fast
							# see legend at file end
assign avoid_motorways	0	# avoid motorways+motorroads, either toll or free ones ( if on moped or on "sightseeing tour" )
assign avoid_toll		1	# avoid paid ways and toll points
assign avoid_unpaved    0	# 0=allowed with high penalty, 1=forbidden to use ever

# drivestyle 0=short	-	Shortest way possible ( for completness, not reaslly useful )
# drivestyle 1=eco		-	Least estimated fuel consumption
# drivestyle 2=fasteco	-	Balanced fuel consuption and travel time ( default )
# drivestyle 3=fast		-   Least travel time, based on lower of explicit maxspeed or defined nominal speed.

assign short	equal drivestyle 0
assign eco		equal drivestyle 1
assign ecofast	equal drivestyle 2
assign fast		equal drivestyle 3

#internal settings

assign downhillcost 0
assign downhillcutoff 0
assign uphillcost 7 # ( 1500 kg, 50 kW engine climbs about 14 km/h )
assign uphillcutoff 0

assign validForCars 1
assign pass1coefficient 1.5

assign node_penalty_multiplier
	switch short	0.0 switch	fast	1.0	switch ecofast	1.6 switch eco	2.0 1.0
				
assign turn_penalty_multiplier
	switch short	0.0 switch	fast	1.0	switch ecofast	1.6 switch eco	2.0 1.0

assign initial_penalty_multiplier
	switch short	0.0 switch	fast	1.0	switch ecofast	1.6 switch eco	2.0 1.0		

---context:way   # following code refers to way-tags

assign ispaved or surface=paved or surface=asphalt or surface=concrete surface=paving_stones

assign	thirdc		highway=tertiary|tertiary_link
assign	secondc		highway=secondary|secondary_link
assign	firstc		highway=primary|primary_link	
assign  trunkc		highway=trunk|trunk_link  
assign	motorwayc	highway=motorway|motorway_link
assign	urbanc		highway=unclassified|residential|service
assign  goodtrack	and highway=track|road|path or tracktype=grade1 ispaved
assign  badtrack	or highway=footway and highway=track|road|path not goodtrack

assign turncost if junction=roundabout then 0 else 

multiply 	turn_penalty_multiplier

(
	 if ( highway=motorway|motorway_link )		then 200	else if ( highway=trunk|trunk_link )			then 175
else if ( highway=primary|primary_link )		then 150	else if ( highway=secondary|secondary_link )	then 120
else if ( highway=tertiary|tertiary_link )		then 100	else if ( highway=unclassified ) 				then 100
else if ( highway=residential   )				then 80		else if ( highway=living_street  )				then 50
else if ( highway=service   )     				then 80
else 50
)

		
assign initialclassifier
if route=ferry then 1
else if highway=motorway						then 2		else if highway=trunk							then 3
else if highway=primary							then 4		else if highway=secondary						then 5
else if highway=tertiary						then 6		else if highway=unclassified					then 7
else if highway=residential						then 8		else if highway=living_street					then 9
else if highway=service							then 10		else if highway=motorway_link					then 12
else if highway=trunk_link						then 13		else if highway=primary_link					then 14
else if highway=secondary_link					then 15		else if highway=tertiary_link					then 16
else 11


assign initialcost
if route=ferry then 20000 
else 
multiply 	initial_penalty_multiplier
(
if		( highway=motorway|motorway_link )		then 300	else if ( highway=trunk|trunk_link )			then 250
else if ( highway=primary|primary_link )		then 300	else if ( highway=secondary|secondary_link )	then 220
else if ( highway=tertiary|tertiary_link )		then 150	else if ( highway=unclassified ) 				then 100
else if ( highway=residential   )				then 100	else if ( highway=living_street  )				then 70
else if ( highway=service   )     				then 100
else 70
)
		

#
# calculate logical car access
#
assign caraccess
		if and avoid_motorways motorroad=yes then 0 else
		switch motorcar=
              switch motor_vehicle=
                     switch vehicle=
                            switch access=
                                   switch or highway=motorway highway=motorway_link
												switch avoid_motorways 0 switch and avoid_toll toll=yes 0 1
                                   switch or highway=trunk highway=trunk_link          1
                                   switch or highway=primary highway=primary_link      1
                                   switch or highway=secondary highway=secondary_link  1
                                   switch or highway=tertiary highway=tertiary_link    1
                                   switch    highway=unclassified                      1
                                   switch    route=ferry                               1
                                   switch or highway=residential highway=living_street 1
								   switch and badtrack avoid_unpaved                   0 
                                   switch    highway=service                           1
                                   0
                                   or access=yes or access=permissive or access=designated access=destination
                            or vehicle=yes or vehicle=designated vehicle=destination
                     or motor_vehicle=yes or motor_vehicle=permissive or motor_vehicle=designated motor_vehicle=destination
              or motorcar=yes or motorcar=permissive or motorcar=designated motorcar=destination

assign accesspenalty
       switch caraccess
              ( if ( and avoid_motorways motorroad=yes ) then 10000 else 0 )
              10000

assign onewaypenalty
       switch switch reversedirection=yes
                     switch oneway=
                            junction=roundabout
                            or oneway=yes or oneway=true oneway=1
                     oneway=-1
              10000
              0.0





assign costfactor

 add max onewaypenalty accesspenalty

 switch and highway= not route=ferry  100000

 # original values from car-test profile
 # switch or highway=motorway highway=motorway_link    1
 # switch or highway=trunk highway=trunk_link          1
 # switch or highway=primary highway=primary_link      switch maxspeed=30 2.0 switch maxspeed=50 1.5 1.3
 # switch or highway=secondary highway=secondary_link  1.4
 # switch or highway=tertiary highway=tertiary_link    1.5
 # switch    highway=unclassified                      1.6
 # switch    route=ferry                               5.67
 # switch    highway=bridleway                         5
 # switch or highway=residential highway=living_street 2
 # switch    highway=service                           2
 # switch or highway=track or highway=road highway=path
 #  switch tracktype=grade1 5
 #  switch ispaved 5
 #  30
 # 10000
 
# costfactors are trivially 1.0 for shortest route
# For Fast route, they are reciprocal to chosen nominal or explicit speed, with 1.0 for 130 km/h, usual for EU motorways
# for Eco route, they are proportional to estimated specific fuel consumption, derived from http://www.mpgforspeed.com
# for FastEco, they are weighted from Eco and Fast

# 	Short	Fast	Eco	FastEco
# kmph				0.7
# 10	1.00	13.00	2.49	5.81
# 15	1.00	8.67	1.90	3.99
# 20	1.00	6.50	1.57	3.07
# 25	1.00	5.20	1.34	2.50
# 30	1.00	4.33	1.18	2.12
# 40	1.00	3.25	1.07	1.69
# 50	1.00	2.60	1.03	1.44
# 60	1.00	2.17	1.02	1.28
# 70	1.00	1.86	1.00	1.16
# 80	1.00	1.63	1.00	1.08
# 90	1.00	1.44	1.01	1.02
# 100	1.00	1.30	1.05	1.00
# 110	1.00	1.18	1.17	1.02
# 120	1.00	1.08	1.29	1.05
# 130	1.00	1.00	1.40	1.08


#avoiding strange detours sometimes observed in OSMAnd native navigation
#related to implict/explicit speed limits, so links may appear faster.

add switch 	highway=motorway_link|trunk_link|primary_link|secondary_link|tertiary_link 0.4 0	

if route=ferry	then 5.67 else 
	        	
if short then 1.0 # if someone insists on shortest route, what does not make much sense for cars

else (  
	if maxspeed=10											then if eco then 2.49 else if ecofast then 5.81 else 13.0 else
	if or maxspeed=20 or highway=bridleway	goodtrack  		then if eco then 1.57 else if ecofast then 3.07 else 6.50 else
	if or maxspeed=30 highway=living_street					then if eco then 1.18 else if ecofast then 2.12 else 4.33 else
	if maxspeed=40											then if eco then 1.07 else if ecofast then 1.69 else 3.25 else
	if or maxspeed=50|urban	urbanc							then if eco then 1.03 else if ecofast then 1.44 else 2.60 else
	if or maxspeed=60 thirdc								then if eco then 1.02 else if ecofast then 1.28 else 2.17 else
	if or maxspeed=70 secondc								then if eco then 1.00 else if ecofast then 1.16 else 1.86 else
	if maxspeed=80											then if eco then 1.00 else if ecofast then 1.08 else 1.63 else
	if or maxspeed=90|rural	firstc							then if eco then 1.01 else if ecofast then 1.02 else 1.44 else
	if maxspeed=100											then if eco then 1.05 else if ecofast then 1.00 else 1.30 else
	if or maxspeed=110 or trunkc 
		( and ( or eco ecofast )  motorwayc )
															then if eco then 1.17 else if ecofast then 1.02 else 1.18 else
	if maxspeed=120											then if eco then 1.29 else if ecofast then 1.05 else 1.08 else
	if or maxspeed=130 motorwayc							then if eco then 1.40 else if ecofast then 1.08 else 1.00 else	
	
	if badtrack   											then 30
															else 10000
)
	



---context:node  # following code refers to node tags

#
# calculate logical car access to nodes
#
assign caraccess
       switch motorcar=
              switch motor_vehicle=
                     switch vehicle=
                            switch access=
                                   switch barrier=gate 0
                                   switch barrier=bollard 0
                                   switch barrier=lift_gate 0
                                   switch barrier=cycle_barrier 0
                                   switch and barrier=toll_booth avoid_toll 0
                                   switch and highway=toll_bridge avoid_toll 0
                                   1
                                   or access=yes or access=permissive or access=designated access=destination
                            or vehicle=yes or vehicle=permissive or vehicle=designated vehicle=destination
                     or motor_vehicle=yes or motor_vehicle=permissive or motor_vehicle=designated motor_vehicle=destination
              or motorcar=yes or motorcar=permissive or motorcar=designated motorcar=destination

assign initialcost
       switch caraccess
                multiply 	node_penalty_multiplier
							if highway=traffic_signals	then 300	else if highway=stop		then 220 else
							if highway=crossing			then 50		else if highway=bus_stop	then 50 
							else 0
              1000000

#	Legend
# costfactors are trivially 1.0 for shortest route
# For Fast route, they are reciprocal to chosen nominal or explicit speed, with 1.0 for 130 km/h, usual for EU motorways
# for Eco route, they are proportional to estimated specific fuel consumption, derived from http://www.mpgforspeed.com
# for FastEco, they are weighted from Eco and Fast
# 
# Version history
# V1.0.3:	ways:		* tweaked initial costs
#			ways:		+ initial and turn penalty multipliers to achieve various effect for various profiles
#			ways:		* decresed link penalty
# V1.0.2:	ways:		* tweaked initial costs and turncosts
# V1.0.1:	nodes:		+ added some distance penalties 
#						+ involved penalty multiplier for start/stop events distance penalties, as being fuel hungry.
#			ways:		* tweaked initial costs and turncosts of ways
#						+ decreased motorway cruising speed to 110 km/h for eco modes, to avoid unnecessery penalties.
# V1.0.0:				not initial version, due late start of the versioning
